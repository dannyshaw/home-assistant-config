schedy_heating:  # This is our app instance name.
  module: hass_apps_loader
  class: SchedyApp

  actor_type: thermostat

  expression_environment: |
    def working_from_home():
      return state("input_boolean.danny_working_from_home")

    def automations_global():
      return state("input_boolean.automations_global")

    def heating_schedule_enabled():
      return state("input_boolean.heating_schedule_enabled")

    def living_room_morning_heating():
      return state("input_boolean.living_room_morning_heating")

    def outside_temperature():
      return state("sensor.dark_sky_temperature")

  rooms:

    adasroom:
      actors:
        climate.adas_room:
      schedule:
      - value: "OFF"
        weekdays: 3,4
        start: "06:30"
        end: "17:00"
      - value: 21
        start: "03:00"
        end: "06:30"
      - value: 20

    livingroom:
      actors:
        climate.living_room:
      schedule:
      - value: 22
        rules:
          - x: "Next() if living_room_morning_heating() == 'on' else Break()"
          - { start: "05:45", end: "09:00" }


    office:
      actors:
        climate.office:
      schedule:
      - v: 20
        rules:
        - weekdays: 1-5
          rules:
          - rules:
            - x: "Next() if working_from_home() == 'on' else Break()"
            - { start: "07:00", end: "16:00" }
      - v: "OFF"
        rules:
          - rules:
            - { start: "00:00", end: "06:00" }


  schedule_append:
  # this somehow gets processed in reverse. so the following will set all
  # schedules to default 20 degress and then off
  - v: "OFF"
  - v: 20



  schedule_prepend:
  - x: Next() if automations_global() == 'on' else "OFF"
  - x: Next() if heating_schedule_enabled() == 'on' else "OFF"


  watched_entities:
  - input_boolean.heating_schedule_enabled
  - input_boolean.automations_global
  - input_boolean.danny_working_from_home
  - input_boolean.living_room_morning_heating
